name: Deploy all MF projects (mf_project_2 then mf_project_3)

on:
  push:
    branches: [main]

jobs:
  build-and-deploy-all:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 10

      - name: Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      - name: Setup pnpm cache
        uses: actions/cache@v4
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Build mf_project_2
        run: pnpm --filter mf_project_2 build

      - name: Install Wrangler
        run: npm install -g wrangler

      - name: Publish mf_project_2
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CF_API_TOKEN }}
        run: |
          cd packages/mf_project_2
          wrangler pages deploy dist --project-name mf2-8nl

      - name: Wait for mf_project_2 to be available
        run: |
          # simple retry check to wait until the manifest is reachable
          for i in 1 2 3 4 5; do
            if curl -sf https://mf2-8nl.pages.dev/mf-manifest.json >/dev/null; then
              echo "mf_project_2 manifest reachable"
              break
            else
              echo "waiting for mf_project_2 manifest... ($i)"
              sleep 5
            fi
          done

      - name: Build mf_project_3
        run: pnpm --filter mf_project_3 build

      - name: Publish mf_project_3
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CF_API_TOKEN }}
        run: |
          cd packages/mf_project_3
          wrangler pages deploy dist --project-name mf3-6sa
